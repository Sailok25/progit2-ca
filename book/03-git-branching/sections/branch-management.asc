[[_branch_management]]
=== Gestió de Branques

(((branques, gestió)))
Ara que heu creat, fusionat i eliminat algunes branques, veurem algunes eines de gestió de branques que us seran útils quan comenceu a utilitzar branques tot el temps.

La comanda `git branch` fa més que simplement crear i eliminar branques.(((git commands, branch)))
Si l'executeu sense arguments, obteniu un llistat senzill de les vostres branques actuals:

[source,console]
----
$ git branch
  iss53
* master
  testing
----

Noteu el caràcter `*` que precedeix la branca `master`: indica la branca que teniu seleccionada actualment (és a dir, la branca a la qual apunta `HEAD`).
Això significa que si feu un commit en aquest punt, la branca `master` es mourà endavant amb la vostra nova feina.
Per veure l'últim commit en cada branca, podeu executar `git branch -v`:

[source,console]
----
$ git branch -v
  iss53   93b412c Corregir problema de javascript
* master  7a98805 Fusionar branca 'iss53'
  testing 782fd34 Afegir scott a la llista d'autors al readme
----

Les opcions útils `--merged` i `--no-merged` poden filtrar aquesta llista a branques que heu fusionat o encara no heu fusionat a la branca en la qual esteu actualment.
Per veure quines branques ja estan fusionades a la branca en la qual esteu, podeu executar `git branch --merged`:

[source,console]
----
$ git branch --merged
  iss53
* master
----

Perquè ja vau fusionar `iss53` abans, el veieu a la vostra llista.
Les branques a aquesta llista sense el `*` davant d'elles generalment es poden eliminar amb `git branch -d`; ja heu incorporat la seva feina a una altra branca, així que no perdreu res.

Per veure totes les branques que contenen feina que encara no heu fusionat, podeu executar `git branch --no-merged`:

[source,console]
----
$ git branch --no-merged
  testing
----

Això mostra la vostra altra branca.
Perquè conté feina que encara no s'ha fusionat, intentar eliminar-la amb `git branch -d` fallarà:

[source,console]
----
$ git branch -d testing
error: The branch 'testing' is not fully merged.
If you are sure you want to delete it, run 'git branch -D testing'.
----

Si realment voleu eliminar la branca i perdre aquesta feina, podeu forçar-ho amb `-D`, com indica el missatge útil.

[TIP]
====
Les opcions descrites anteriorment, `--merged` i `--no-merged`, si no se'ls proporciona un nom de commit o branca com a argument, us mostren el que està, respectivament, fusionat o no fusionat a la vostra branca _actual_.

Sempre podeu proporcionar un argument addicional per preguntar sobre l'estat de fusió respecte a alguna altra branca sense seleccionar aquesta altra branca primer, com en, què no està fusionat a la branca `master`?
[source,console]
----
$ git checkout testing
$ git branch --no-merged master
  topicA
  featureB
----
====

==== Canviant el nom d'una branca

[CAUTION]
====
No canvieu el nom de branques que encara estan en ús per altres col·laboradors.
No canvieu el nom d'una branca com master/main/mainline sense haver llegit la secció <<_changing_master>>.
====

Suposem que teniu una branca que es diu `bad-branch-name` i voleu canviar-la a `corrected-branch-name`, mantenint tota la història.
També voleu canviar el nom de la branca al remot (GitHub, GitLab, altre servidor).
Com ho feu?

Canvieu el nom de la branca localment amb la comanda `git branch --move`:

[source, console]
----
$ git branch --move bad-branch-name corrected-branch-name
----

Això substitueix el vostre `bad-branch-name` amb `corrected-branch-name`, però aquest canvi és només local per ara.
Per permetre que altres vegin la branca corregida al remot, envieu-la:

[source,console]
----
$ git push --set-upstream origin corrected-branch-name
----

Ara farem una breu mirada a on som ara:

[source, console]
----
$ git branch --all
* corrected-branch-name
  main
  remotes/origin/bad-branch-name
  remotes/origin/corrected-branch-name
  remotes/origin/main
----

Noteu que esteu a la branca `corrected-branch-name` i està disponible al remot.
No obstant això, la branca amb el nom dolent també encara està present allà, però podeu eliminar-la executant la següent comanda:

[source,console]
----
$ git push origin --delete bad-branch-name
----

Ara el nom de la branca dolent està completament substituït pel nom de la branca corregida.

[[_changing_master]]
===== Canviant el nom de la branca master

[WARNING]
====
Canviar el nom d'una branca com master/main/mainline/default trencarà les integracions, serveis, utilitats auxiliars i scripts de construcció/alliberament que utilitza el vostre repositori.
Abans de fer això, assegureu-vos de consultar amb els vostres col·laboradors.
A més, assegureu-vos de fer una cerca exhaustiva al vostre repositori i actualitzar qualsevol referència al vell nom de branca al vostre codi i scripts.
====

Canvieu el nom de la vostra branca local `master` a `main` amb la següent comanda:

[source,console]
----
$ git branch --move master main
----

Ja no hi ha cap branca local `master`, perquè s'ha canviat el nom a la branca `main`.

Per permetre que altres vegin la nova branca `main`, heu d'enviar-la al remot.
Això fa que la branca canviada de nom estigui disponible al remot.

[source,console]
----
$ git push --set-upstream origin main
----

Ara acabem amb el següent estat:

[source,console]
----
$ git branch --all
* main
  remotes/origin/HEAD -> origin/master
  remotes/origin/main
  remotes/origin/master
----

La vostra branca local `master` ha desaparegut, ja que s'ha substituït per la branca `main`.
La branca `main` està present al remot.
No obstant això, la vella branca `master` encara està present al remot.
Altres col·laboradors continuaran utilitzant la branca `master` com a base de la seva feina, fins que feu alguns canvis addicionals.

Ara teniu algunes tasques més davant vostre per completar la transició:

* Qualsevol projecte que depengui d'aquest ha de actualitzar el seu codi i/o configuració.
* Actualitzar qualsevol fitxer de configuració de l'executor de proves.
* Ajustar scripts de construcció i alliberament.
* Redirigir configuracions al vostre host de repositori per a coses com la branca predeterminada del repositori, regles de fusió, i altres coses que coincideixen amb noms de branques.
* Actualitzar referències a la vella branca a la documentació.
* Tancar o fusionar qualsevol sol·licitud de tirada que apunti a la vella branca.

Després d'haver fet totes aquestes tasques, i estar segurs que la branca `main` funciona igual que la branca `master`, podeu eliminar la branca `master`:

[source, console]
----
$ git push origin --delete master
----
