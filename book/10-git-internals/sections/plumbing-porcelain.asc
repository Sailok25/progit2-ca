[[_plumbing_porcelain]]
=== Fontaneria i Porcellana

Aquest llibre cobreix principalment com utilitzar Git amb unes 30 subcomandes com `checkout`, `branch`, `remote`, i així successivament. Però com que Git inicialment era un kit d'eines per a un sistema de control de versions en lloc d'un VCS complet i amigable per a l'usuari, té una sèrie de subcomandes que fan treballs de baix nivell i van ser dissenyades per ser encadenades a l'estil UNIX o cridades des d'scripts. Aquestes comandes generalment es coneixen com les comandes de "fontaneria" de Git, mentre que les comandes més amigables per a l'usuari es diuen comandes de "porcellana".

Com haureu notat fins ara, els primers nou capítols d'aquest llibre tracten gairebé exclusivament amb comandes de porcellana. Però en aquest capítol, tractareu principalment amb les comandes de fontaneria de baix nivell, perquè us donen accés al funcionament intern de Git i ajuden a demostrar com i per què Git fa el que fa. Moltes d'aquestes comandes no estan pensades per ser utilitzades manualment a la línia d'ordres, sinó més aviat per ser utilitzades com a blocs de construcció per a noves eines i scripts personalitzats.

Quan executeu `git init` en un directori nou o existent, Git crea el directori `.git`, on es troba gairebé tot el que Git emmagatzema i manipula. Si voleu fer una còpia de seguretat o clonar el vostre repositori, copiar aquest únic directori a un altre lloc us dona gairebé tot el que necessiteu. Aquest capítol tracta bàsicament del que podeu veure en aquest directori. Així és com es veu típicament un directori `.git` recentment inicialitzat:

[source,console]
----
$ ls -F1
config
description
HEAD
hooks/
info/
objects/
refs/
----

Depenent de la vostra versió de Git, podríeu veure algun contingut addicional allà, però aquest és un repositori `git init` fresc: és el que veieu per defecte. El fitxer `description` només és utilitzat pel programa GitWeb, així que no us preocupeu per ell. El fitxer `config` conté les vostres opcions de configuració específiques del projecte, i el directori `info` manté un fitxer d'exclusió global per a patrons ignorats que no voleu rastrejar en un fitxer `.gitignore`. El directori `hooks` conté els vostres scripts de ganxo del costat del client o del servidor, que es discuteixen en detall a <<ch08-customizing-git#_git_hooks>>.

Això deixa quatre entrades importants: els fitxers `HEAD` i `index` (aquest últim encara per crear), i els directoris `objects` i `refs`. Aquestes són les parts centrals de Git. El directori `objects` emmagatzema tot el contingut de la vostra base de dades, el directori `refs` emmagatzema punters als objectes de confirmació en aquestes dades (branques, etiquetes, remots i més), el fitxer `HEAD` apunta a la branca que actualment teniu descomprimida, i el fitxer `index` és on Git emmagatzema la informació de la vostra àrea d'ensamblatge. Ara veureu cadascuna d'aquestes seccions en detall per veure com opera Git.
