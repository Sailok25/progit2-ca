=== GitWeb

(((serving repositories, GitWeb)))(((GitWeb)))
Ara que tens accés bàsic de lectura/escriptura i només lectura al teu projecte, potser voldràs configurar un visualitzador basat en web senzill.
Git ve amb un script CGI anomenat GitWeb que de vegades s'utilitza per a això.

[[gitweb]]
.La interfície d'usuari web de GitWeb
image::images/git-instaweb.png[La interfície d'usuari web de GitWeb]

Si vols veure com seria GitWeb per al teu projecte, Git ve amb una ordre per posar en marxa una instància temporal si tens un servidor web lleuger al teu sistema com `lighttpd` o `webrick`.
En màquines Linux, `lighttpd` sovint està instal·lat, així que podries fer que funcioni escrivint `git instaweb` al teu directori del projecte.
Si estàs executant macOS, Leopard ve preinstal·lat amb Ruby, així que `webrick` podria ser la teva millor opció.
Per iniciar `instaweb` amb un gestor diferent de lighttpd, pots executar-lo amb l'opció `--httpd`.

(((git commands, instaweb)))

[source,console]
----
$ git instaweb --httpd=webrick
[2009-02-21 10:02:21] INFO  WEBrick 1.3.1
[2009-02-21 10:02:21] INFO  ruby 1.8.6 (2008-03-03) [universal-darwin9.0]
----

Això inicia un servidor HTTPD al port 1234 i després inicia automàticament un navegador web que obre aquesta pàgina.
És bastant fàcil per a tu.
Quan hàgis acabat i vulguis aturar el servidor, pots executar la mateixa ordre amb l'opció `--stop`:

[source,console]
----
$ git instaweb --httpd=webrick --stop
----

Si vols executar la interfície web en un servidor tot el temps per al teu equip o per a un projecte de codi obert que estàs allotjant, hauràs de configurar l'script CGI per ser servit pel teu servidor web normal.
Algunes distribucions de Linux tenen un paquet `gitweb` que pots instal·lar mitjançant `apt` o `dnf`, així que potser voldràs provar això primer.
Configurarem GitWeb manualment de manera ràpida.
Primer, has d'obtenir el codi font de Git, que inclou GitWeb, i generar l'script CGI personalitzat:

[source,console]
----
$ git clone https://git.kernel.org/pub/scm/git/git.git
$ cd git/
$ make GITWEB_PROJECTROOT="/srv/git" prefix=/usr gitweb
    SUBDIR gitweb
    SUBDIR ../
make[2]: `GIT-VERSION-FILE' is up to date.
    GEN gitweb.cgi
    GEN static/gitweb.js
$ sudo cp -Rf gitweb /var/www/
----

Nota que has d'indicar a l'ordre on trobar els teus repositoris Git amb la variable `GITWEB_PROJECTROOT`.
Ara, has de fer que Apache utilitzi CGI per a aquest script, per al qual pots afegir un VirtualHost:

[source,console]
----
<VirtualHost *:80>
    ServerName gitserver
    DocumentRoot /var/www/gitweb
    <Directory /var/www/gitweb>
        Options +ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch
        AllowOverride All
        order allow,deny
        Allow from all
        AddHandler cgi-script cgi
        DirectoryIndex gitweb.cgi
    </Directory>
</VirtualHost>
----

Un cop més, GitWeb pot ser servit amb qualsevol servidor web capaç de CGI o Perl; si prefereixes utilitzar una altra cosa, no hauria de ser difícil de configurar.
En aquest punt, hauries de poder visitar `http://gitserver/` per veure els teus repositoris en línia.