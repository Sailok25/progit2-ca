[[_git_aliases]]
=== Aliases de Git

(((aliases)))
Abans de continuar amb el proper capítol, volem presentar-te una funcionalitat que pot fer que la teva experiència amb Git sigui més simple, fàcil i familiar: els aliases.
Per evitar confusions, no els utilitzarem enlloc més d’aquest llibre, però si continues fent servir Git amb certa regularitat, els aliases són quelcom que hauries de conèixer.

Git no infereix automàticament la teva comanda si l’escrius només parcialment.
Si no vols escriure el text complet de cada comanda de Git, pots configurar fàcilment un alias per a cada comanda utilitzant `git config`.(((git commands, config)))
Aquí tens un parell d’exemples que potser voldràs configurar:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Això vol dir que, per exemple, en lloc d’escriure `git commit`, només has d’escriure `git ci`.
A mesura que facis servir Git, segurament utilitzaràs altres comandes sovint; no dubtis a crear nous aliases.

Aquesta tècnica també pot ser molt útil per crear comandes que creus que haurien d’existir.
Per exemple, per corregir el problema d’usabilitat que has tingut en treure un fitxer de l’àrea de preparació, pots afegir un alias `unstage` a Git:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Això fa que les dues comandes següents siguin equivalents:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Això sembla una mica més clar.
També és habitual afegir una comanda `last`, així:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

D’aquesta manera, pots veure l’últim commit fàcilment:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    Test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Com pots veure, Git simplement substitueix la nova comanda per la que li has indicat amb l’alias.
Tanmateix, potser vols executar una comanda externa, i no una subcomanda de Git.
En aquest cas, comences la comanda amb un caràcter `!`.
Això és útil si escrius les teves pròpies eines que treballen amb un repositori Git.
Ho podem demostrar fent que l’alias `git visual` executi `gitk`:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
