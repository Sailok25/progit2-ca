[[_signing]]
=== Signar el Teu Treball

Git és criptogràficament segur, però no és infal·lible. Si estàs agafant treball d'altres a internet i vols verificar que els commits són realment d'una font de confiança, Git té algunes maneres de signar i verificar el treball utilitzant GPG.

==== Introducció a GPG

En primer lloc, si vols signar res necessites configurar GPG i instal·lar la teva clau personal.

[source,console]
----
$ gpg --list-keys
/Users/schacon/.gnupg/pubring.gpg
---------------------------------
pub   2048R/0A46826A 2014-06-04
uid                  Scott Chacon (Git signing key) <schacon@gmail.com>
sub   2048R/874529A9 2014-06-04
----

Si no tens una clau instal·lada, pots generar-ne una amb `gpg --gen-key`.

[source,console]
----
$ gpg --gen-key
----

Un cop tens una clau privada per signar, pots configurar Git perquè l'utilitzi per signar coses establint la configuració `user.signingkey`.

[source,console]
----
$ git config --global user.signingkey 0A46826A!
----

Ara Git utilitzarà la teva clau per defecte per signar etiquetes i commits si ho desitges.

==== Signar Etiquetes

Si tens una clau privada GPG configurada, ara la pots utilitzar per signar noves etiquetes. Tot el que has de fer és utilitzar `-s` en lloc de `-a`:

[source,console]
----
$ git tag -s v1.5 -m 'la meva etiqueta signada 1.5'

Necessites una contrasenya per desbloquejar la clau secreta per a
usuari: "Ben Straub <ben@straub.cc>"
Clau RSA de 2048 bits, ID 800430EB, creada 2014-05-04
----

Si executes `git show` en aquesta etiqueta, pots veure la teva signatura GPG adjunta:

[source,console]
----
$ git show v1.5
tag v1.5
Tagger: Ben Straub <ben@straub.cc>
Date:   Sat May 3 20:29:41 2014 -0700

la meva etiqueta signada 1.5
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAABAgAGBQJTZbQlAAoJEF0+sviABDDrZbQH/09PfE51KPVPlanr6q1v4/Ut
LQxfojUWiLQdg2ESJItkcuweYg+kc3HCyFejeDIBw9dpXt00rY26p05qrpnG+85b
hM1/PswpPLuBSr+oCIDj5GMC2r2iEKsfv2fJbNW8iWAXVLoWZRF8B0MfqX/YTMbm
ecorc4iXzQu7tupRihslbNkfvfciMnSDeSvzCpWAHl7h8Wj6hhqePmLm9lAYqnKp
8S5B/1SSQuEAjRZgI4IexpZoeKGVDptPHxLLS38fozsyi0QyDyzEgJxcJQVMXxVi
RUysgqjcpT8+iQM1PblGfHR4XAhuOqN5Fx06PSaFZhqvWFezJ28/CLyX5q+oIVk=
=EFTF
-----END PGP SIGNATURE-----

commit ca82a6dff817ec66f44342007202690a93763949
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Mar 17 21:52:11 2008 -0700

    Canvia el número de versió
----

==== Verificar Etiquetes

Per verificar una etiqueta signada, utilitzes `git tag -v <nom-etiqueta>`. Aquest comandament utilitza GPG per verificar la signatura. Necessites la clau pública del signant al teu anell de claus perquè això funcioni correctament:

[source,console]
----
$ git tag -v v1.4.2.1
object 883653babd8ee7ea23e6a5c392bb739348b1eb61
type commit
tag v1.4.2.1
tagger Junio C Hamano <junkio@cox.net> 1158138501 -0700

GIT 1.4.2.1

Correccions menors des de 1.4.2, incloent git-mv i git-http amb alternatius.
gpg: Signatura feta Wed Sep 13 02:08:25 2006 PDT utilitzant la clau DSA ID F3119B9A
gpg: Signatura bona de "Junio C Hamano <junkio@cox.net>"
gpg:                 aka "[jpeg image of size 1513]"
Empremta de la clau principal: 3565 2A26 2040 E066 C9A7  4A7D C0C6 D9A4 F311 9B9A
----

Si no tens la clau pública del signant, obtindràs alguna cosa com això:

[source,console]
----
gpg: Signatura feta Wed Sep 13 02:08:25 2006 PDT utilitzant la clau DSA ID F3119B9A
gpg: No es pot verificar la signatura: clau pública no trobada
error: no es pot verificar l'etiqueta 'v1.4.2.1'
----

[[_signing_commits]]
==== Signar Commits

En versions més recents de Git (v1.7.9 i superiors), ara també pots signar commits individuals. Si t'interessa signar commits directament en lloc de només les etiquetes, tot el que has de fer és afegir un `-S` al teu comandament `git commit`.

[source,console]
----
$ git commit -a -S -m 'Commit signat'

Necessites una contrasenya per desbloquejar la clau secreta per a
usuari: "Scott Chacon (Git signing key) <schacon@gmail.com>"
Clau RSA de 2048 bits, ID 0A46826A, creada 2014-06-04

[master 5c3386c] Commit signat
4 fitxers canviats, 4 insercions(+), 24 eliminacions(-)
reescriu Rakefile (100%)
crea mode 100644 lib/git.rb
----

Per veure i verificar aquestes signatures, també hi ha una opció `--show-signature` per a `git log`.

[source,console]
----
$ git log --show-signature -1
commit 5c3386cf54bba0a33a32da706aa52bc0155503c2
gpg: Signatura feta Wed Jun 4 19:49:17 2014 PDT utilitzant la clau RSA ID 0A46826A
gpg: Signatura bona de "Scott Chacon (Git signing key) <schacon@gmail.com>"
Author: Scott Chacon <schacon@gmail.com>
Date:   Wed Jun 4 19:49:17 2014 -0700

    Commit signat
----

Addicionalment, pots configurar `git log` perquè verifiqui qualsevol signatura que trobi i les llisti a la seva sortida amb el format `%G?`.

[source,console]
----
$ git log --pretty="format:%h %G? %aN %s"

5c3386c G Scott Chacon Commit signat
ca82a6d N Scott Chacon Canvia el número de versió
085bb3b N Scott Chacon Elimina codi de prova innecesari
a11bef0 N Scott Chacon Commit inicial
----

Aquí podem veure que només l'últim commit està signat i és vàlid i els commits anteriors no ho són.

A Git 1.8.3 i posteriors, `git merge` i `git pull` poden ser instruïts per inspeccionar i rebutjar quan es fusiona un commit que no porta una signatura GPG de confiança amb l'opció `--verify-signatures`.

Si utilitzes aquesta opció en fusionar una branca i conté commits que no estan signats i són vàlids, la fusió no funcionarà.

[source,console]
----
$ git merge --verify-signatures non-verify
fatal: El commit ab06180 no té una signatura GPG.
----

Si la fusió conté només commits signats vàlids, el comandament de fusió et mostrarà totes les signatures que ha verificat i després continuarà amb la fusió.

[source,console]
----
$ git merge --verify-signatures signed-branch
El commit 13ad65e té una bona signatura GPG de Scott Chacon (Git signing key) <schacon@gmail.com>
Actualitzant 5c3386c..13ad65e
Fast-forward
README | 2 ++
1 fitxer canviat, 2 insercions(+)
----

També pots utilitzar l'opció `-S` amb el comandament `git merge` per signar el commit de fusió resultant. L'exemple següent verifica que cada commit a la branca a fusionar està signat i, a més, signa el commit de fusió resultant.

[source,console]
----
$ git merge --verify-signatures -S signed-branch
El commit 13ad65e té una bona signatura GPG de Scott Chacon (Git signing key) <schacon@gmail.com>

Necessites una contrasenya per desbloquejar la clau secreta per a
usuari: "Scott Chacon (Git signing key) <schacon@gmail.com>"
Clau RSA de 2048 bits, ID 0A46826A, creada 2014-06-04

Fusió feta per l'estratègia 'recursiva'.
README | 2 ++
1 fitxer canviat, 2 insercions(+)
----

==== Tothom Ha de Signar

Signar etiquetes i commits és genial, però si decides adoptar això al teu flux de treball normal, hauràs d'assegurar-te que tots al teu equip entenen com fer-ho. Això es pot aconseguir demanant a tots els que treballen amb el repositori que executin `git config --local commit.gpgsign true` per tenir tots els seus commits al repositori signats per defecte. Si no ho fas, acabaràs passant molt de temps ajudant a la gent a entendre com reescriure els seus commits amb versions signades. Assegura't d'entendre GPG i els beneficis de signar coses abans d'adoptar això com a part del teu flux de treball estàndard.