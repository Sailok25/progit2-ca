=== Git in Zsh

(((zsh)))(((completat amb tabulador, zsh)))(((indicadors de shell, zsh)))
Zsh també inclou una biblioteca de completat amb tabulador per a Git.
Per utilitzar-la, simplement executeu `autoload -Uz compinit && compinit` al vostre `.zshrc`.
La interfície de Zsh és una mica més potent que la de Bash:

[source,console]
----
$ git che<tab>
check-attr        -- mostra informació de gitattributes
check-ref-format  -- assegura que un nom de referència està ben format
checkout          -- canvia de branca o camins a l'arbre de treball
checkout-index    -- copia fitxers de l'índex al directori de treball
cherry            -- troba commits no fusionats aigües amunt
cherry-pick       -- aplica canvis introduïts per alguns commits existents
----

Les completacions amb tabulador ambigües no només es llisten; tenen descripcions útils, i podeu navegar gràficament per la llista premant repetidament la tecla de tabulació.
Això funciona amb les comandes de Git, els seus arguments, i els noms de les coses dins del repositori (com referències i remots), així com els noms de fitxers i totes les altres coses que Zsh sap com completar amb tabulador.

Zsh inclou un marc per obtenir informació dels sistemes de control de versions, anomenat `vcs_info`.
Per incloure el nom de la branca a l'indicador a la dreta, afegiu aquestes línies al vostre fitxer `~/.zshrc`:

[source,console]
----
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT='${vcs_info_msg_0_}'
# PROMPT='${vcs_info_msg_0_}%# '
zstyle ':vcs_info:git:*' formats '%b'
----

Això resulta en una visualització de la branca actual al costat dret de la finestra del terminal, sempre que el vostre shell estigui dins d'un repositori Git.
El costat esquerre també està suportat, per descomptat; simplement descomenteu l'assignació a `PROMPT`.
S'assembla una mica a això:

.Customized `zsh` prompt
image::images/zsh-prompt.png[Customized `zsh` prompt]

Per a més informació sobre `vcs_info`, consulteu la seva documentació a la pàgina del manual `zshcontrib(1)`, o en línia a https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#Version-Control-Information[^].

En lloc de `vcs_info`, podríeu preferir l'script de personalització de l'indicador que s'inclou amb Git, anomenat `git-prompt.sh`; vegeu https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh[^] per a més detalls.
`git-prompt.sh` és compatible tant amb Bash com amb Zsh.

Zsh és prou potent com per tenir marcs sencers dedicats a millorar-lo.
Un d'ells es diu "oh-my-zsh", i es pot trobar a https://github.com/ohmyzsh/ohmyzsh[^].
El sistema de connectors d'oh-my-zsh inclou un potent completat amb tabulador per a Git, i té una varietat de "temes" d'indicador, molts dels quals mostren dades de control de versions.
<<oh_my_zsh_git>> és només un exemple del que es pot fer amb aquest sistema.

[[oh_my_zsh_git]]
.An example of an oh-my-zsh theme
image::images/zsh-oh-my.png[An example of an oh-my-zsh theme]
