=== Git in Bash

(((bash)))(((completat amb tabulador, bash)))(((indicadors de shell, bash)))
Si sou un usuari de Bash, podeu aprofitar algunes de les característiques del vostre shell per fer que la vostra experiència amb Git sigui molt més amigable.
Git realment s'inclou amb connectors per a diversos shells, però no està activat per defecte.

Primer, heu d'obtenir una còpia del fitxer de completacions des del codi font de la versió de Git que esteu utilitzant.
Comproveu la vostra versió escrivint `git version`, després utilitzeu `git checkout tags/vX.Y.Z`, on `vX.Y.Z` correspon a la versió de Git que esteu utilitzant.
Copieu el fitxer `contrib/completion/git-completion.bash` en un lloc accessible, com el vostre directori personal, i afegiu això al vostre `.bashrc`:

[source,console]
----
. ~/git-completion.bash
----

Un cop fet això, canvieu el vostre directori a un repositori Git, i escriviu:

[source,console]
----
$ git chec<tab>
----

…i Bash completarà automàticament a `git checkout`.
Això funciona amb tots els subcomandes de Git, paràmetres de línia de comandes, i noms de remots i referències on sigui apropiat.

També és útil personalitzar el vostre indicador per mostrar informació sobre el repositori Git del directori actual.
Això pot ser tan senzill o complex com vulgueu, però generalment hi ha algunes peces clau d'informació que la majoria de la gent vol, com la branca actual, i l'estat del directori de treball.
Per afegir aquests al vostre indicador, simplement copieu el fitxer `contrib/completion/git-prompt.sh` del repositori font de Git al vostre directori personal, afegiu alguna cosa com això al vostre `.bashrc`:

[source,console]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

El `\w` significa imprimir el directori de treball actual, el `\$` imprimeix la part `$` de l'indicador, i `__git_ps1 " (%s)"` crida la funció proporcionada per `git-prompt.sh` amb un argument de format.
Ara el vostre indicador de bash semblarà així quan esteu en qualsevol lloc dins d'un projecte controlat per Git:

.Customized `bash` prompt
image::images/git-bash.png[Customized `bash` prompt]

Tots dos scripts venen amb documentació útil; doneu un cop d'ull al contingut de `git-completion.bash` i `git-prompt.sh` per a més informació.
